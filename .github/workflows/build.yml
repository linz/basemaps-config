name: build

on:
  pull_request:
  push:
    branches:
      - master
jobs:
  build:
    permissions:
      id-token: write
      contents: read

    runs-on: ubuntu-latest
    concurrency: deploy-${{ github.head_ref }}
    env:
      BASEMAPS_BUCKET: linz-basemaps
      BASEMAPS_CONTAINER: ghcr.io/linz/basemaps/cli:v6.29.0-21-gd632301c
      DOCKER_AWS_ENV: -e AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY -e AWS_SESSION_TOKEN -e AWS_REGION -e AWS_DEFAULT_REGION

    steps:
      - uses: actions/checkout@v3

      - name: (Build) Prepare path for glyphs and sprites
        run: |
          mkdir -p assets/fonts/
          mkdir -p assets/sprites/

      - name: (Build) Build Glyphs
        uses: linz/action-build-pbf-glyphs@v1
        with:
          source: config/fonts/
          target: assets/fonts/
          
      - name: (Build) Build Sprites
        run: |
          docker run -v $PWD:$PWD ${DOCKER_AWS_ENV} ${BASEMAPS_CONTAINER} sprites --path $PWD/config/sprites/topographic/ --output $PWD/assets/sprites/
        
      - name: (Build) Bundle Assets Into Cotar
        run: |
          docker run -v $PWD:$PWD ${DOCKER_AWS_ENV} ${BASEMAPS_CONTAINER} bundle-assets --assets $PWD/assets/ --output $PWD/assets.tar.co

      - name: (NonProd) AWS Configure
        uses: aws-actions/configure-aws-credentials@v1.6.1
        with:
          aws-region: ap-southeast-2
          mask-aws-account-id: true
          role-to-assume: ${{ secrets.AWS_ROLE_NON_PROD }}
      
      - name: (NonProd - Config) Bundle Config File
        run: |
          docker run -v $PWD:$PWD ${DOCKER_AWS_ENV} ${BASEMAPS_CONTAINER} bundle --config $PWD/config --output $PWD/config.json

      - name: (NonProd - Config) Compare To DynamoDB
        run: |
          docker run -v $PWD:$PWD ${DOCKER_AWS_ENV} ${BASEMAPS_CONTAINER} import --config $PWD/config.json

      - name: (NonProd - Config) Import Config To DynamoDB
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          docker run -v $PWD:$PWD ${DOCKER_AWS_ENV} ${BASEMAPS_CONTAINER} import --config $PWD/config.json --commit

      - name: (Screenshot) Screenshot Pull Request Changes
        run: |
          docker run -v $PWD:$PWD ${DOCKER_AWS_ENV} ${BASEMAPS_CONTAINER} screenshot --config $PWD/config.json --assets $PWD/assets.tar.co --tiles $PWD/test-tiles/default.test.tiles.json --output $PWD/.artifacts/visual-snapshots

      - name: Save snapshots
        uses: getsentry/action-visual-snapshot@v2
        with:
          save-only: true
          snapshot-path: .artifacts/visual-snapshots

      - name: (Prod) AWS Configure
        uses: aws-actions/configure-aws-credentials@v1.6.1
        with:
          aws-region: ap-southeast-2
          mask-aws-account-id: true
          role-to-assume: ${{ secrets.AWS_ROLE_PROD }}
      
      # - name: (Prod - Config) Upload Hasded Config File
      #   run: |
      #     CONFIG_HASH=$(cat config.json | jq .hash -r)
      #     gzip -9 -k config.json
      #     aws s3 cp config.json.gz s3://${BASEMAPS_BUCKET}/config/config-${CONFIG_HASH}.json.gz --content-encoding gzip

      # - name: (Prod - Config) Upload Hashed Assets
      #   run: |
      #     SPRITE_HASH=$(sha256sum assets.tar.co | cut -f 1 -d " " )
      #     aws s3 cp assets.tar.co s3://${BASEMAPS_BUCKET}/assets/assets-${SPRITE_HASH}.tar.co

      - name: (Prod - Config) Upload Latest Config
        # if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          aws s3 cp config.json.gz s3://${BASEMAPS_BUCKET}/config-latest.json.gz --content-encoding gzip

      - name: (Prod - Config) Upload Latest Assets
        # if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          aws s3 cp assets.tar.co s3://${BASEMAPS_BUCKET}/assets-latest.tar.co

      - name: (Prod - Config) Compare to DynamoDB
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          docker run -v $PWD:$PWD ${DOCKER_AWS_ENV} ${BASEMAPS_CONTAINER} import --config $PWD/config.json

      - name: (Prod - Config) Import Config To DynamoDB
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          docker run -v $PWD:$PWD ${DOCKER_AWS_ENV} ${BASEMAPS_CONTAINER} import --config $PWD/config.json --commit
        
  visual-diff:
    permissions:
      id-token: write
      contents: write
      checks: write
    needs: [build]
    name: validate screenshots
    if: github.ref != 'refs/heads/master' && github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: AWS Configure
        uses: aws-actions/configure-aws-credentials@v1.6.1
        with:
          aws-region: ap-southeast-2
          mask-aws-account-id: true
          role-to-assume: ${{ secrets.AWS_ROLE_SCREENSHOT }}

      - name: Diff snapshots
        id: visual-snapshots-diff
        uses: blacha/action-visual-snapshot@v2
        with:
          storage-prefix: "s3://linz-basemaps-screenshot"
          storage-url: "https://d25mfjh9syaxsr.cloudfront.net"
