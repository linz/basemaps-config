name: Build

on:
  pull_request:
    paths:
      - 'config/imagery/*.json'
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js 12.x
        uses: actions/setup-node@v2.1.2
        with:
          node-version: "12.x"
          registry-url: https://registry.npmjs.org

      - name: Install
        run: yarn  --frozen-lockfile --check-files

      - name: Build
        run: yarn build

      - name: AWS Configure
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_BASEMAPS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_BASEMAPS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
          mask-account-id: true
          role-to-assume: ${{ secrets.AWS_BASEMAPS_ROLE_PROD }}

      - name: (Imagery Config) compare to production
        if: github.ref != 'refs/heads/master' && github.event_name == 'push'
        run: |
          ls config/imagery/*.json | node ./build/configure.imagery.js import -t production
        env:
          NODE_ENV: "production"

      - name: (Imagery Config) creat PR tag
        if: github.ref != 'refs/heads/master' && github.event_name == 'pull_request'
        run: |
          git diff --name-only $(git merge-base origin/master HEAD) HEAD | node ./build/configure.imagery.js import -t pr-${{ github.event.number }} --commit
        env:
          NODE_ENV: "production"

      - name: (Imagery Config) creat Production tag
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          ls config/imagery/*.json  | node ./build/configure.imagery.js import -t production --commit
        env:
          NODE_ENV: "production"

      - name: (Release) Setup git config
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: (Release) version
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          yarn version --patch
          git push
          git push --tags
